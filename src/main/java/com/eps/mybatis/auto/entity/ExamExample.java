package com.eps.mybatis.auto.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ExamExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Integer limitSize;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public ExamExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setLimitSize(Integer limitSize) {
        this.limitSize=limitSize;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Integer getLimitSize() {
        return limitSize;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andExamIdIsNull() {
            addCriterion("EXAM_ID is null");
            return (Criteria) this;
        }

        public Criteria andExamIdIsNotNull() {
            addCriterion("EXAM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andExamIdEqualTo(Integer value) {
            addCriterion("EXAM_ID =", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdNotEqualTo(Integer value) {
            addCriterion("EXAM_ID <>", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdGreaterThan(Integer value) {
            addCriterion("EXAM_ID >", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("EXAM_ID >=", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdLessThan(Integer value) {
            addCriterion("EXAM_ID <", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdLessThanOrEqualTo(Integer value) {
            addCriterion("EXAM_ID <=", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdIn(List<Integer> values) {
            addCriterion("EXAM_ID in", values, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdNotIn(List<Integer> values) {
            addCriterion("EXAM_ID not in", values, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_ID between", value1, value2, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdNotBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_ID not between", value1, value2, "examId");
            return (Criteria) this;
        }

        public Criteria andExamNameIsNull() {
            addCriterion("EXAM_NAME is null");
            return (Criteria) this;
        }

        public Criteria andExamNameIsNotNull() {
            addCriterion("EXAM_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andExamNameEqualTo(String value) {
            addCriterion("EXAM_NAME =", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameNotEqualTo(String value) {
            addCriterion("EXAM_NAME <>", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameGreaterThan(String value) {
            addCriterion("EXAM_NAME >", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameGreaterThanOrEqualTo(String value) {
            addCriterion("EXAM_NAME >=", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameLessThan(String value) {
            addCriterion("EXAM_NAME <", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameLessThanOrEqualTo(String value) {
            addCriterion("EXAM_NAME <=", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameLike(String value) {
            addCriterion("EXAM_NAME like", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameNotLike(String value) {
            addCriterion("EXAM_NAME not like", value, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameIn(List<String> values) {
            addCriterion("EXAM_NAME in", values, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameNotIn(List<String> values) {
            addCriterion("EXAM_NAME not in", values, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameBetween(String value1, String value2) {
            addCriterion("EXAM_NAME between", value1, value2, "examName");
            return (Criteria) this;
        }

        public Criteria andExamNameNotBetween(String value1, String value2) {
            addCriterion("EXAM_NAME not between", value1, value2, "examName");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("YEAR is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("YEAR is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(Integer value) {
            addCriterion("YEAR =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(Integer value) {
            addCriterion("YEAR <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(Integer value) {
            addCriterion("YEAR >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("YEAR >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(Integer value) {
            addCriterion("YEAR <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(Integer value) {
            addCriterion("YEAR <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<Integer> values) {
            addCriterion("YEAR in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<Integer> values) {
            addCriterion("YEAR not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(Integer value1, Integer value2) {
            addCriterion("YEAR between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(Integer value1, Integer value2) {
            addCriterion("YEAR not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andSemesterIsNull() {
            addCriterion("SEMESTER is null");
            return (Criteria) this;
        }

        public Criteria andSemesterIsNotNull() {
            addCriterion("SEMESTER is not null");
            return (Criteria) this;
        }

        public Criteria andSemesterEqualTo(Integer value) {
            addCriterion("SEMESTER =", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterNotEqualTo(Integer value) {
            addCriterion("SEMESTER <>", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterGreaterThan(Integer value) {
            addCriterion("SEMESTER >", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterGreaterThanOrEqualTo(Integer value) {
            addCriterion("SEMESTER >=", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterLessThan(Integer value) {
            addCriterion("SEMESTER <", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterLessThanOrEqualTo(Integer value) {
            addCriterion("SEMESTER <=", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterIn(List<Integer> values) {
            addCriterion("SEMESTER in", values, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterNotIn(List<Integer> values) {
            addCriterion("SEMESTER not in", values, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterBetween(Integer value1, Integer value2) {
            addCriterion("SEMESTER between", value1, value2, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterNotBetween(Integer value1, Integer value2) {
            addCriterion("SEMESTER not between", value1, value2, "semester");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIsNull() {
            addCriterion("SUBJECT_NO is null");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIsNotNull() {
            addCriterion("SUBJECT_NO is not null");
            return (Criteria) this;
        }

        public Criteria andSubjectNoEqualTo(String value) {
            addCriterion("SUBJECT_NO =", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotEqualTo(String value) {
            addCriterion("SUBJECT_NO <>", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoGreaterThan(String value) {
            addCriterion("SUBJECT_NO >", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoGreaterThanOrEqualTo(String value) {
            addCriterion("SUBJECT_NO >=", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoLessThan(String value) {
            addCriterion("SUBJECT_NO <", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoLessThanOrEqualTo(String value) {
            addCriterion("SUBJECT_NO <=", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoLike(String value) {
            addCriterion("SUBJECT_NO like", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotLike(String value) {
            addCriterion("SUBJECT_NO not like", value, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoIn(List<String> values) {
            addCriterion("SUBJECT_NO in", values, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotIn(List<String> values) {
            addCriterion("SUBJECT_NO not in", values, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoBetween(String value1, String value2) {
            addCriterion("SUBJECT_NO between", value1, value2, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andSubjectNoNotBetween(String value1, String value2) {
            addCriterion("SUBJECT_NO not between", value1, value2, "subjectNo");
            return (Criteria) this;
        }

        public Criteria andExamTypeIsNull() {
            addCriterion("EXAM_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andExamTypeIsNotNull() {
            addCriterion("EXAM_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andExamTypeEqualTo(Integer value) {
            addCriterion("EXAM_TYPE =", value, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeNotEqualTo(Integer value) {
            addCriterion("EXAM_TYPE <>", value, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeGreaterThan(Integer value) {
            addCriterion("EXAM_TYPE >", value, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("EXAM_TYPE >=", value, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeLessThan(Integer value) {
            addCriterion("EXAM_TYPE <", value, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeLessThanOrEqualTo(Integer value) {
            addCriterion("EXAM_TYPE <=", value, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeIn(List<Integer> values) {
            addCriterion("EXAM_TYPE in", values, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeNotIn(List<Integer> values) {
            addCriterion("EXAM_TYPE not in", values, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_TYPE between", value1, value2, "examType");
            return (Criteria) this;
        }

        public Criteria andExamTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_TYPE not between", value1, value2, "examType");
            return (Criteria) this;
        }

        public Criteria andBTopicNumIsNull() {
            addCriterion("B_TOPIC_NUM is null");
            return (Criteria) this;
        }

        public Criteria andBTopicNumIsNotNull() {
            addCriterion("B_TOPIC_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andBTopicNumEqualTo(Integer value) {
            addCriterion("B_TOPIC_NUM =", value, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumNotEqualTo(Integer value) {
            addCriterion("B_TOPIC_NUM <>", value, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumGreaterThan(Integer value) {
            addCriterion("B_TOPIC_NUM >", value, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("B_TOPIC_NUM >=", value, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumLessThan(Integer value) {
            addCriterion("B_TOPIC_NUM <", value, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumLessThanOrEqualTo(Integer value) {
            addCriterion("B_TOPIC_NUM <=", value, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumIn(List<Integer> values) {
            addCriterion("B_TOPIC_NUM in", values, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumNotIn(List<Integer> values) {
            addCriterion("B_TOPIC_NUM not in", values, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumBetween(Integer value1, Integer value2) {
            addCriterion("B_TOPIC_NUM between", value1, value2, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andBTopicNumNotBetween(Integer value1, Integer value2) {
            addCriterion("B_TOPIC_NUM not between", value1, value2, "bTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumIsNull() {
            addCriterion("M_TOPIC_NUM is null");
            return (Criteria) this;
        }

        public Criteria andMTopicNumIsNotNull() {
            addCriterion("M_TOPIC_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andMTopicNumEqualTo(Integer value) {
            addCriterion("M_TOPIC_NUM =", value, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumNotEqualTo(Integer value) {
            addCriterion("M_TOPIC_NUM <>", value, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumGreaterThan(Integer value) {
            addCriterion("M_TOPIC_NUM >", value, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("M_TOPIC_NUM >=", value, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumLessThan(Integer value) {
            addCriterion("M_TOPIC_NUM <", value, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumLessThanOrEqualTo(Integer value) {
            addCriterion("M_TOPIC_NUM <=", value, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumIn(List<Integer> values) {
            addCriterion("M_TOPIC_NUM in", values, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumNotIn(List<Integer> values) {
            addCriterion("M_TOPIC_NUM not in", values, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumBetween(Integer value1, Integer value2) {
            addCriterion("M_TOPIC_NUM between", value1, value2, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andMTopicNumNotBetween(Integer value1, Integer value2) {
            addCriterion("M_TOPIC_NUM not between", value1, value2, "mTopicNum");
            return (Criteria) this;
        }

        public Criteria andTotalIsNull() {
            addCriterion("TOTAL is null");
            return (Criteria) this;
        }

        public Criteria andTotalIsNotNull() {
            addCriterion("TOTAL is not null");
            return (Criteria) this;
        }

        public Criteria andTotalEqualTo(Integer value) {
            addCriterion("TOTAL =", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotEqualTo(Integer value) {
            addCriterion("TOTAL <>", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThan(Integer value) {
            addCriterion("TOTAL >", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("TOTAL >=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThan(Integer value) {
            addCriterion("TOTAL <", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThanOrEqualTo(Integer value) {
            addCriterion("TOTAL <=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalIn(List<Integer> values) {
            addCriterion("TOTAL in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotIn(List<Integer> values) {
            addCriterion("TOTAL not in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalBetween(Integer value1, Integer value2) {
            addCriterion("TOTAL between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("TOTAL not between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andCareaorIsNull() {
            addCriterion("CAREAOR is null");
            return (Criteria) this;
        }

        public Criteria andCareaorIsNotNull() {
            addCriterion("CAREAOR is not null");
            return (Criteria) this;
        }

        public Criteria andCareaorEqualTo(String value) {
            addCriterion("CAREAOR =", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorNotEqualTo(String value) {
            addCriterion("CAREAOR <>", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorGreaterThan(String value) {
            addCriterion("CAREAOR >", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorGreaterThanOrEqualTo(String value) {
            addCriterion("CAREAOR >=", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorLessThan(String value) {
            addCriterion("CAREAOR <", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorLessThanOrEqualTo(String value) {
            addCriterion("CAREAOR <=", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorLike(String value) {
            addCriterion("CAREAOR like", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorNotLike(String value) {
            addCriterion("CAREAOR not like", value, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorIn(List<String> values) {
            addCriterion("CAREAOR in", values, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorNotIn(List<String> values) {
            addCriterion("CAREAOR not in", values, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorBetween(String value1, String value2) {
            addCriterion("CAREAOR between", value1, value2, "careaor");
            return (Criteria) this;
        }

        public Criteria andCareaorNotBetween(String value1, String value2) {
            addCriterion("CAREAOR not between", value1, value2, "careaor");
            return (Criteria) this;
        }

        public Criteria andCostTimeIsNull() {
            addCriterion("COST_TIME is null");
            return (Criteria) this;
        }

        public Criteria andCostTimeIsNotNull() {
            addCriterion("COST_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andCostTimeEqualTo(Integer value) {
            addCriterion("COST_TIME =", value, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeNotEqualTo(Integer value) {
            addCriterion("COST_TIME <>", value, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeGreaterThan(Integer value) {
            addCriterion("COST_TIME >", value, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("COST_TIME >=", value, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeLessThan(Integer value) {
            addCriterion("COST_TIME <", value, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeLessThanOrEqualTo(Integer value) {
            addCriterion("COST_TIME <=", value, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeIn(List<Integer> values) {
            addCriterion("COST_TIME in", values, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeNotIn(List<Integer> values) {
            addCriterion("COST_TIME not in", values, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeBetween(Integer value1, Integer value2) {
            addCriterion("COST_TIME between", value1, value2, "costTime");
            return (Criteria) this;
        }

        public Criteria andCostTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("COST_TIME not between", value1, value2, "costTime");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("REMARK is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("REMARK is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("REMARK =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("REMARK <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("REMARK >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("REMARK >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("REMARK <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("REMARK <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("REMARK like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("REMARK not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("REMARK in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("REMARK not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("REMARK between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("REMARK not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andQRandomIsNull() {
            addCriterion("Q_RANDOM is null");
            return (Criteria) this;
        }

        public Criteria andQRandomIsNotNull() {
            addCriterion("Q_RANDOM is not null");
            return (Criteria) this;
        }

        public Criteria andQRandomEqualTo(Integer value) {
            addCriterion("Q_RANDOM =", value, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomNotEqualTo(Integer value) {
            addCriterion("Q_RANDOM <>", value, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomGreaterThan(Integer value) {
            addCriterion("Q_RANDOM >", value, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomGreaterThanOrEqualTo(Integer value) {
            addCriterion("Q_RANDOM >=", value, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomLessThan(Integer value) {
            addCriterion("Q_RANDOM <", value, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomLessThanOrEqualTo(Integer value) {
            addCriterion("Q_RANDOM <=", value, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomIn(List<Integer> values) {
            addCriterion("Q_RANDOM in", values, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomNotIn(List<Integer> values) {
            addCriterion("Q_RANDOM not in", values, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomBetween(Integer value1, Integer value2) {
            addCriterion("Q_RANDOM between", value1, value2, "qRandom");
            return (Criteria) this;
        }

        public Criteria andQRandomNotBetween(Integer value1, Integer value2) {
            addCriterion("Q_RANDOM not between", value1, value2, "qRandom");
            return (Criteria) this;
        }

        public Criteria andORandomIsNull() {
            addCriterion("O_RANDOM is null");
            return (Criteria) this;
        }

        public Criteria andORandomIsNotNull() {
            addCriterion("O_RANDOM is not null");
            return (Criteria) this;
        }

        public Criteria andORandomEqualTo(Integer value) {
            addCriterion("O_RANDOM =", value, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomNotEqualTo(Integer value) {
            addCriterion("O_RANDOM <>", value, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomGreaterThan(Integer value) {
            addCriterion("O_RANDOM >", value, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomGreaterThanOrEqualTo(Integer value) {
            addCriterion("O_RANDOM >=", value, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomLessThan(Integer value) {
            addCriterion("O_RANDOM <", value, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomLessThanOrEqualTo(Integer value) {
            addCriterion("O_RANDOM <=", value, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomIn(List<Integer> values) {
            addCriterion("O_RANDOM in", values, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomNotIn(List<Integer> values) {
            addCriterion("O_RANDOM not in", values, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomBetween(Integer value1, Integer value2) {
            addCriterion("O_RANDOM between", value1, value2, "oRandom");
            return (Criteria) this;
        }

        public Criteria andORandomNotBetween(Integer value1, Integer value2) {
            addCriterion("O_RANDOM not between", value1, value2, "oRandom");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeIsNull() {
            addCriterion("B_CODE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeIsNotNull() {
            addCriterion("B_CODE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeEqualTo(Integer value) {
            addCriterion("B_CODE_TYPE =", value, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeNotEqualTo(Integer value) {
            addCriterion("B_CODE_TYPE <>", value, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeGreaterThan(Integer value) {
            addCriterion("B_CODE_TYPE >", value, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("B_CODE_TYPE >=", value, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeLessThan(Integer value) {
            addCriterion("B_CODE_TYPE <", value, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeLessThanOrEqualTo(Integer value) {
            addCriterion("B_CODE_TYPE <=", value, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeIn(List<Integer> values) {
            addCriterion("B_CODE_TYPE in", values, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeNotIn(List<Integer> values) {
            addCriterion("B_CODE_TYPE not in", values, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeBetween(Integer value1, Integer value2) {
            addCriterion("B_CODE_TYPE between", value1, value2, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andBCodeTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("B_CODE_TYPE not between", value1, value2, "bCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeIsNull() {
            addCriterion("S_CODE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeIsNotNull() {
            addCriterion("S_CODE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeEqualTo(Integer value) {
            addCriterion("S_CODE_TYPE =", value, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeNotEqualTo(Integer value) {
            addCriterion("S_CODE_TYPE <>", value, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeGreaterThan(Integer value) {
            addCriterion("S_CODE_TYPE >", value, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("S_CODE_TYPE >=", value, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeLessThan(Integer value) {
            addCriterion("S_CODE_TYPE <", value, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeLessThanOrEqualTo(Integer value) {
            addCriterion("S_CODE_TYPE <=", value, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeIn(List<Integer> values) {
            addCriterion("S_CODE_TYPE in", values, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeNotIn(List<Integer> values) {
            addCriterion("S_CODE_TYPE not in", values, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeBetween(Integer value1, Integer value2) {
            addCriterion("S_CODE_TYPE between", value1, value2, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andSCodeTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("S_CODE_TYPE not between", value1, value2, "sCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeIsNull() {
            addCriterion("O_CODE_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeIsNotNull() {
            addCriterion("O_CODE_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeEqualTo(Integer value) {
            addCriterion("O_CODE_TYPE =", value, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeNotEqualTo(Integer value) {
            addCriterion("O_CODE_TYPE <>", value, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeGreaterThan(Integer value) {
            addCriterion("O_CODE_TYPE >", value, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("O_CODE_TYPE >=", value, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeLessThan(Integer value) {
            addCriterion("O_CODE_TYPE <", value, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeLessThanOrEqualTo(Integer value) {
            addCriterion("O_CODE_TYPE <=", value, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeIn(List<Integer> values) {
            addCriterion("O_CODE_TYPE in", values, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeNotIn(List<Integer> values) {
            addCriterion("O_CODE_TYPE not in", values, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeBetween(Integer value1, Integer value2) {
            addCriterion("O_CODE_TYPE between", value1, value2, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andOCodeTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("O_CODE_TYPE not between", value1, value2, "oCodeType");
            return (Criteria) this;
        }

        public Criteria andPassScoreIsNull() {
            addCriterion("PASS_SCORE is null");
            return (Criteria) this;
        }

        public Criteria andPassScoreIsNotNull() {
            addCriterion("PASS_SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andPassScoreEqualTo(Double value) {
            addCriterion("PASS_SCORE =", value, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreNotEqualTo(Double value) {
            addCriterion("PASS_SCORE <>", value, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreGreaterThan(Double value) {
            addCriterion("PASS_SCORE >", value, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreGreaterThanOrEqualTo(Double value) {
            addCriterion("PASS_SCORE >=", value, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreLessThan(Double value) {
            addCriterion("PASS_SCORE <", value, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreLessThanOrEqualTo(Double value) {
            addCriterion("PASS_SCORE <=", value, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreIn(List<Double> values) {
            addCriterion("PASS_SCORE in", values, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreNotIn(List<Double> values) {
            addCriterion("PASS_SCORE not in", values, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreBetween(Double value1, Double value2) {
            addCriterion("PASS_SCORE between", value1, value2, "passScore");
            return (Criteria) this;
        }

        public Criteria andPassScoreNotBetween(Double value1, Double value2) {
            addCriterion("PASS_SCORE not between", value1, value2, "passScore");
            return (Criteria) this;
        }

        public Criteria andExamAreaIsNull() {
            addCriterion("EXAM_AREA is null");
            return (Criteria) this;
        }

        public Criteria andExamAreaIsNotNull() {
            addCriterion("EXAM_AREA is not null");
            return (Criteria) this;
        }

        public Criteria andExamAreaEqualTo(Integer value) {
            addCriterion("EXAM_AREA =", value, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaNotEqualTo(Integer value) {
            addCriterion("EXAM_AREA <>", value, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaGreaterThan(Integer value) {
            addCriterion("EXAM_AREA >", value, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaGreaterThanOrEqualTo(Integer value) {
            addCriterion("EXAM_AREA >=", value, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaLessThan(Integer value) {
            addCriterion("EXAM_AREA <", value, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaLessThanOrEqualTo(Integer value) {
            addCriterion("EXAM_AREA <=", value, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaIn(List<Integer> values) {
            addCriterion("EXAM_AREA in", values, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaNotIn(List<Integer> values) {
            addCriterion("EXAM_AREA not in", values, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_AREA between", value1, value2, "examArea");
            return (Criteria) this;
        }

        public Criteria andExamAreaNotBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_AREA not between", value1, value2, "examArea");
            return (Criteria) this;
        }

        public Criteria andTestIdIsNull() {
            addCriterion("TEST_ID is null");
            return (Criteria) this;
        }

        public Criteria andTestIdIsNotNull() {
            addCriterion("TEST_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTestIdEqualTo(Integer value) {
            addCriterion("TEST_ID =", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotEqualTo(Integer value) {
            addCriterion("TEST_ID <>", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdGreaterThan(Integer value) {
            addCriterion("TEST_ID >", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEST_ID >=", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdLessThan(Integer value) {
            addCriterion("TEST_ID <", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdLessThanOrEqualTo(Integer value) {
            addCriterion("TEST_ID <=", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdIn(List<Integer> values) {
            addCriterion("TEST_ID in", values, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotIn(List<Integer> values) {
            addCriterion("TEST_ID not in", values, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdBetween(Integer value1, Integer value2) {
            addCriterion("TEST_ID between", value1, value2, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TEST_ID not between", value1, value2, "testId");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusIsNull() {
            addCriterion("RELEASE_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusIsNotNull() {
            addCriterion("RELEASE_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusEqualTo(Integer value) {
            addCriterion("RELEASE_STATUS =", value, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusNotEqualTo(Integer value) {
            addCriterion("RELEASE_STATUS <>", value, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusGreaterThan(Integer value) {
            addCriterion("RELEASE_STATUS >", value, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("RELEASE_STATUS >=", value, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusLessThan(Integer value) {
            addCriterion("RELEASE_STATUS <", value, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusLessThanOrEqualTo(Integer value) {
            addCriterion("RELEASE_STATUS <=", value, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusIn(List<Integer> values) {
            addCriterion("RELEASE_STATUS in", values, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusNotIn(List<Integer> values) {
            addCriterion("RELEASE_STATUS not in", values, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusBetween(Integer value1, Integer value2) {
            addCriterion("RELEASE_STATUS between", value1, value2, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("RELEASE_STATUS not between", value1, value2, "releaseStatus");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeIsNull() {
            addCriterion("RELEASE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeIsNotNull() {
            addCriterion("RELEASE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeEqualTo(Date value) {
            addCriterion("RELEASE_TIME =", value, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeNotEqualTo(Date value) {
            addCriterion("RELEASE_TIME <>", value, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeGreaterThan(Date value) {
            addCriterion("RELEASE_TIME >", value, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("RELEASE_TIME >=", value, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeLessThan(Date value) {
            addCriterion("RELEASE_TIME <", value, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeLessThanOrEqualTo(Date value) {
            addCriterion("RELEASE_TIME <=", value, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeIn(List<Date> values) {
            addCriterion("RELEASE_TIME in", values, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeNotIn(List<Date> values) {
            addCriterion("RELEASE_TIME not in", values, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeBetween(Date value1, Date value2) {
            addCriterion("RELEASE_TIME between", value1, value2, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andReleaseTimeNotBetween(Date value1, Date value2) {
            addCriterion("RELEASE_TIME not between", value1, value2, "releaseTime");
            return (Criteria) this;
        }

        public Criteria andEStatusIsNull() {
            addCriterion("E_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andEStatusIsNotNull() {
            addCriterion("E_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andEStatusEqualTo(Integer value) {
            addCriterion("E_STATUS =", value, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusNotEqualTo(Integer value) {
            addCriterion("E_STATUS <>", value, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusGreaterThan(Integer value) {
            addCriterion("E_STATUS >", value, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("E_STATUS >=", value, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusLessThan(Integer value) {
            addCriterion("E_STATUS <", value, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusLessThanOrEqualTo(Integer value) {
            addCriterion("E_STATUS <=", value, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusIn(List<Integer> values) {
            addCriterion("E_STATUS in", values, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusNotIn(List<Integer> values) {
            addCriterion("E_STATUS not in", values, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusBetween(Integer value1, Integer value2) {
            addCriterion("E_STATUS between", value1, value2, "eStatus");
            return (Criteria) this;
        }

        public Criteria andEStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("E_STATUS not between", value1, value2, "eStatus");
            return (Criteria) this;
        }

        public Criteria andGradeLevelIsNull() {
            addCriterion("GRADE_LEVEL is null");
            return (Criteria) this;
        }

        public Criteria andGradeLevelIsNotNull() {
            addCriterion("GRADE_LEVEL is not null");
            return (Criteria) this;
        }

        public Criteria andGradeLevelEqualTo(Integer value) {
            addCriterion("GRADE_LEVEL =", value, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelNotEqualTo(Integer value) {
            addCriterion("GRADE_LEVEL <>", value, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelGreaterThan(Integer value) {
            addCriterion("GRADE_LEVEL >", value, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("GRADE_LEVEL >=", value, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelLessThan(Integer value) {
            addCriterion("GRADE_LEVEL <", value, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelLessThanOrEqualTo(Integer value) {
            addCriterion("GRADE_LEVEL <=", value, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelIn(List<Integer> values) {
            addCriterion("GRADE_LEVEL in", values, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelNotIn(List<Integer> values) {
            addCriterion("GRADE_LEVEL not in", values, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelBetween(Integer value1, Integer value2) {
            addCriterion("GRADE_LEVEL between", value1, value2, "gradeLevel");
            return (Criteria) this;
        }

        public Criteria andGradeLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("GRADE_LEVEL not between", value1, value2, "gradeLevel");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table e_exam
     *
     * @mbggenerated do_not_delete_during_merge Tue May 26 14:51:53 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table e_exam
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}