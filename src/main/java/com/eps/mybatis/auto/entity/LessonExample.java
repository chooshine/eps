package com.eps.mybatis.auto.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LessonExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Integer limitSize;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public LessonExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setLimitSize(Integer limitSize) {
        this.limitSize=limitSize;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Integer getLimitSize() {
        return limitSize;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andLessonIdIsNull() {
            addCriterion("LESSON_ID is null");
            return (Criteria) this;
        }

        public Criteria andLessonIdIsNotNull() {
            addCriterion("LESSON_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLessonIdEqualTo(Integer value) {
            addCriterion("LESSON_ID =", value, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdNotEqualTo(Integer value) {
            addCriterion("LESSON_ID <>", value, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdGreaterThan(Integer value) {
            addCriterion("LESSON_ID >", value, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("LESSON_ID >=", value, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdLessThan(Integer value) {
            addCriterion("LESSON_ID <", value, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdLessThanOrEqualTo(Integer value) {
            addCriterion("LESSON_ID <=", value, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdIn(List<Integer> values) {
            addCriterion("LESSON_ID in", values, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdNotIn(List<Integer> values) {
            addCriterion("LESSON_ID not in", values, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdBetween(Integer value1, Integer value2) {
            addCriterion("LESSON_ID between", value1, value2, "lessonId");
            return (Criteria) this;
        }

        public Criteria andLessonIdNotBetween(Integer value1, Integer value2) {
            addCriterion("LESSON_ID not between", value1, value2, "lessonId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdIsNull() {
            addCriterion("TEACHER_ID is null");
            return (Criteria) this;
        }

        public Criteria andTeacherIdIsNotNull() {
            addCriterion("TEACHER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTeacherIdEqualTo(Integer value) {
            addCriterion("TEACHER_ID =", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdNotEqualTo(Integer value) {
            addCriterion("TEACHER_ID <>", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdGreaterThan(Integer value) {
            addCriterion("TEACHER_ID >", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEACHER_ID >=", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdLessThan(Integer value) {
            addCriterion("TEACHER_ID <", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdLessThanOrEqualTo(Integer value) {
            addCriterion("TEACHER_ID <=", value, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdIn(List<Integer> values) {
            addCriterion("TEACHER_ID in", values, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdNotIn(List<Integer> values) {
            addCriterion("TEACHER_ID not in", values, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdBetween(Integer value1, Integer value2) {
            addCriterion("TEACHER_ID between", value1, value2, "teacherId");
            return (Criteria) this;
        }

        public Criteria andTeacherIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TEACHER_ID not between", value1, value2, "teacherId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIsNull() {
            addCriterion("SUBJECT_ID is null");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIsNotNull() {
            addCriterion("SUBJECT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSubjectIdEqualTo(Integer value) {
            addCriterion("SUBJECT_ID =", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotEqualTo(Integer value) {
            addCriterion("SUBJECT_ID <>", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdGreaterThan(Integer value) {
            addCriterion("SUBJECT_ID >", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("SUBJECT_ID >=", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdLessThan(Integer value) {
            addCriterion("SUBJECT_ID <", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdLessThanOrEqualTo(Integer value) {
            addCriterion("SUBJECT_ID <=", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIn(List<Integer> values) {
            addCriterion("SUBJECT_ID in", values, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotIn(List<Integer> values) {
            addCriterion("SUBJECT_ID not in", values, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdBetween(Integer value1, Integer value2) {
            addCriterion("SUBJECT_ID between", value1, value2, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("SUBJECT_ID not between", value1, value2, "subjectId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("YEAR is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("YEAR is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(Integer value) {
            addCriterion("YEAR =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(Integer value) {
            addCriterion("YEAR <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(Integer value) {
            addCriterion("YEAR >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("YEAR >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(Integer value) {
            addCriterion("YEAR <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(Integer value) {
            addCriterion("YEAR <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<Integer> values) {
            addCriterion("YEAR in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<Integer> values) {
            addCriterion("YEAR not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(Integer value1, Integer value2) {
            addCriterion("YEAR between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(Integer value1, Integer value2) {
            addCriterion("YEAR not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andSemesterIsNull() {
            addCriterion("SEMESTER is null");
            return (Criteria) this;
        }

        public Criteria andSemesterIsNotNull() {
            addCriterion("SEMESTER is not null");
            return (Criteria) this;
        }

        public Criteria andSemesterEqualTo(Integer value) {
            addCriterion("SEMESTER =", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterNotEqualTo(Integer value) {
            addCriterion("SEMESTER <>", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterGreaterThan(Integer value) {
            addCriterion("SEMESTER >", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterGreaterThanOrEqualTo(Integer value) {
            addCriterion("SEMESTER >=", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterLessThan(Integer value) {
            addCriterion("SEMESTER <", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterLessThanOrEqualTo(Integer value) {
            addCriterion("SEMESTER <=", value, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterIn(List<Integer> values) {
            addCriterion("SEMESTER in", values, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterNotIn(List<Integer> values) {
            addCriterion("SEMESTER not in", values, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterBetween(Integer value1, Integer value2) {
            addCriterion("SEMESTER between", value1, value2, "semester");
            return (Criteria) this;
        }

        public Criteria andSemesterNotBetween(Integer value1, Integer value2) {
            addCriterion("SEMESTER not between", value1, value2, "semester");
            return (Criteria) this;
        }

        public Criteria andWeekdayIsNull() {
            addCriterion("WEEKDAY is null");
            return (Criteria) this;
        }

        public Criteria andWeekdayIsNotNull() {
            addCriterion("WEEKDAY is not null");
            return (Criteria) this;
        }

        public Criteria andWeekdayEqualTo(Integer value) {
            addCriterion("WEEKDAY =", value, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayNotEqualTo(Integer value) {
            addCriterion("WEEKDAY <>", value, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayGreaterThan(Integer value) {
            addCriterion("WEEKDAY >", value, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayGreaterThanOrEqualTo(Integer value) {
            addCriterion("WEEKDAY >=", value, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayLessThan(Integer value) {
            addCriterion("WEEKDAY <", value, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayLessThanOrEqualTo(Integer value) {
            addCriterion("WEEKDAY <=", value, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayIn(List<Integer> values) {
            addCriterion("WEEKDAY in", values, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayNotIn(List<Integer> values) {
            addCriterion("WEEKDAY not in", values, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayBetween(Integer value1, Integer value2) {
            addCriterion("WEEKDAY between", value1, value2, "weekday");
            return (Criteria) this;
        }

        public Criteria andWeekdayNotBetween(Integer value1, Integer value2) {
            addCriterion("WEEKDAY not between", value1, value2, "weekday");
            return (Criteria) this;
        }

        public Criteria andLessonTimeIsNull() {
            addCriterion("LESSON_TIME is null");
            return (Criteria) this;
        }

        public Criteria andLessonTimeIsNotNull() {
            addCriterion("LESSON_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andLessonTimeEqualTo(Integer value) {
            addCriterion("LESSON_TIME =", value, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeNotEqualTo(Integer value) {
            addCriterion("LESSON_TIME <>", value, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeGreaterThan(Integer value) {
            addCriterion("LESSON_TIME >", value, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("LESSON_TIME >=", value, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeLessThan(Integer value) {
            addCriterion("LESSON_TIME <", value, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeLessThanOrEqualTo(Integer value) {
            addCriterion("LESSON_TIME <=", value, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeIn(List<Integer> values) {
            addCriterion("LESSON_TIME in", values, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeNotIn(List<Integer> values) {
            addCriterion("LESSON_TIME not in", values, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeBetween(Integer value1, Integer value2) {
            addCriterion("LESSON_TIME between", value1, value2, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("LESSON_TIME not between", value1, value2, "lessonTime");
            return (Criteria) this;
        }

        public Criteria andLessonNameIsNull() {
            addCriterion("LESSON_NAME is null");
            return (Criteria) this;
        }

        public Criteria andLessonNameIsNotNull() {
            addCriterion("LESSON_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andLessonNameEqualTo(String value) {
            addCriterion("LESSON_NAME =", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameNotEqualTo(String value) {
            addCriterion("LESSON_NAME <>", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameGreaterThan(String value) {
            addCriterion("LESSON_NAME >", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameGreaterThanOrEqualTo(String value) {
            addCriterion("LESSON_NAME >=", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameLessThan(String value) {
            addCriterion("LESSON_NAME <", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameLessThanOrEqualTo(String value) {
            addCriterion("LESSON_NAME <=", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameLike(String value) {
            addCriterion("LESSON_NAME like", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameNotLike(String value) {
            addCriterion("LESSON_NAME not like", value, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameIn(List<String> values) {
            addCriterion("LESSON_NAME in", values, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameNotIn(List<String> values) {
            addCriterion("LESSON_NAME not in", values, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameBetween(String value1, String value2) {
            addCriterion("LESSON_NAME between", value1, value2, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonNameNotBetween(String value1, String value2) {
            addCriterion("LESSON_NAME not between", value1, value2, "lessonName");
            return (Criteria) this;
        }

        public Criteria andLessonLengthIsNull() {
            addCriterion("LESSON_LENGTH is null");
            return (Criteria) this;
        }

        public Criteria andLessonLengthIsNotNull() {
            addCriterion("LESSON_LENGTH is not null");
            return (Criteria) this;
        }

        public Criteria andLessonLengthEqualTo(String value) {
            addCriterion("LESSON_LENGTH =", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthNotEqualTo(String value) {
            addCriterion("LESSON_LENGTH <>", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthGreaterThan(String value) {
            addCriterion("LESSON_LENGTH >", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthGreaterThanOrEqualTo(String value) {
            addCriterion("LESSON_LENGTH >=", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthLessThan(String value) {
            addCriterion("LESSON_LENGTH <", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthLessThanOrEqualTo(String value) {
            addCriterion("LESSON_LENGTH <=", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthLike(String value) {
            addCriterion("LESSON_LENGTH like", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthNotLike(String value) {
            addCriterion("LESSON_LENGTH not like", value, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthIn(List<String> values) {
            addCriterion("LESSON_LENGTH in", values, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthNotIn(List<String> values) {
            addCriterion("LESSON_LENGTH not in", values, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthBetween(String value1, String value2) {
            addCriterion("LESSON_LENGTH between", value1, value2, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andLessonLengthNotBetween(String value1, String value2) {
            addCriterion("LESSON_LENGTH not between", value1, value2, "lessonLength");
            return (Criteria) this;
        }

        public Criteria andClassesIsNull() {
            addCriterion("CLASSES is null");
            return (Criteria) this;
        }

        public Criteria andClassesIsNotNull() {
            addCriterion("CLASSES is not null");
            return (Criteria) this;
        }

        public Criteria andClassesEqualTo(String value) {
            addCriterion("CLASSES =", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotEqualTo(String value) {
            addCriterion("CLASSES <>", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesGreaterThan(String value) {
            addCriterion("CLASSES >", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesGreaterThanOrEqualTo(String value) {
            addCriterion("CLASSES >=", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesLessThan(String value) {
            addCriterion("CLASSES <", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesLessThanOrEqualTo(String value) {
            addCriterion("CLASSES <=", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesLike(String value) {
            addCriterion("CLASSES like", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotLike(String value) {
            addCriterion("CLASSES not like", value, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesIn(List<String> values) {
            addCriterion("CLASSES in", values, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotIn(List<String> values) {
            addCriterion("CLASSES not in", values, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesBetween(String value1, String value2) {
            addCriterion("CLASSES between", value1, value2, "classes");
            return (Criteria) this;
        }

        public Criteria andClassesNotBetween(String value1, String value2) {
            addCriterion("CLASSES not between", value1, value2, "classes");
            return (Criteria) this;
        }

        public Criteria andCreditHourIsNull() {
            addCriterion("CREDIT_HOUR is null");
            return (Criteria) this;
        }

        public Criteria andCreditHourIsNotNull() {
            addCriterion("CREDIT_HOUR is not null");
            return (Criteria) this;
        }

        public Criteria andCreditHourEqualTo(Integer value) {
            addCriterion("CREDIT_HOUR =", value, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourNotEqualTo(Integer value) {
            addCriterion("CREDIT_HOUR <>", value, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourGreaterThan(Integer value) {
            addCriterion("CREDIT_HOUR >", value, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourGreaterThanOrEqualTo(Integer value) {
            addCriterion("CREDIT_HOUR >=", value, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourLessThan(Integer value) {
            addCriterion("CREDIT_HOUR <", value, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourLessThanOrEqualTo(Integer value) {
            addCriterion("CREDIT_HOUR <=", value, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourIn(List<Integer> values) {
            addCriterion("CREDIT_HOUR in", values, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourNotIn(List<Integer> values) {
            addCriterion("CREDIT_HOUR not in", values, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourBetween(Integer value1, Integer value2) {
            addCriterion("CREDIT_HOUR between", value1, value2, "creditHour");
            return (Criteria) this;
        }

        public Criteria andCreditHourNotBetween(Integer value1, Integer value2) {
            addCriterion("CREDIT_HOUR not between", value1, value2, "creditHour");
            return (Criteria) this;
        }

        public Criteria andPerWeekIsNull() {
            addCriterion("PER_WEEK is null");
            return (Criteria) this;
        }

        public Criteria andPerWeekIsNotNull() {
            addCriterion("PER_WEEK is not null");
            return (Criteria) this;
        }

        public Criteria andPerWeekEqualTo(String value) {
            addCriterion("PER_WEEK =", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekNotEqualTo(String value) {
            addCriterion("PER_WEEK <>", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekGreaterThan(String value) {
            addCriterion("PER_WEEK >", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekGreaterThanOrEqualTo(String value) {
            addCriterion("PER_WEEK >=", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekLessThan(String value) {
            addCriterion("PER_WEEK <", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekLessThanOrEqualTo(String value) {
            addCriterion("PER_WEEK <=", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekLike(String value) {
            addCriterion("PER_WEEK like", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekNotLike(String value) {
            addCriterion("PER_WEEK not like", value, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekIn(List<String> values) {
            addCriterion("PER_WEEK in", values, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekNotIn(List<String> values) {
            addCriterion("PER_WEEK not in", values, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekBetween(String value1, String value2) {
            addCriterion("PER_WEEK between", value1, value2, "perWeek");
            return (Criteria) this;
        }

        public Criteria andPerWeekNotBetween(String value1, String value2) {
            addCriterion("PER_WEEK not between", value1, value2, "perWeek");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNull() {
            addCriterion("START_DATE is null");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNotNull() {
            addCriterion("START_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andStartDateEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE =", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE <>", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThan(Date value) {
            addCriterionForJDBCDate("START_DATE >", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE >=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThan(Date value) {
            addCriterionForJDBCDate("START_DATE <", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("START_DATE <=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateIn(List<Date> values) {
            addCriterionForJDBCDate("START_DATE in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("START_DATE not in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("START_DATE between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("START_DATE not between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andEndDateIsNull() {
            addCriterion("END_DATE is null");
            return (Criteria) this;
        }

        public Criteria andEndDateIsNotNull() {
            addCriterion("END_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andEndDateEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE =", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE <>", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateGreaterThan(Date value) {
            addCriterionForJDBCDate("END_DATE >", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE >=", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateLessThan(Date value) {
            addCriterionForJDBCDate("END_DATE <", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("END_DATE <=", value, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateIn(List<Date> values) {
            addCriterionForJDBCDate("END_DATE in", values, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("END_DATE not in", values, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("END_DATE between", value1, value2, "endDate");
            return (Criteria) this;
        }

        public Criteria andEndDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("END_DATE not between", value1, value2, "endDate");
            return (Criteria) this;
        }

        public Criteria andExistFlagIsNull() {
            addCriterion("EXIST_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andExistFlagIsNotNull() {
            addCriterion("EXIST_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andExistFlagEqualTo(Integer value) {
            addCriterion("EXIST_FLAG =", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagNotEqualTo(Integer value) {
            addCriterion("EXIST_FLAG <>", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagGreaterThan(Integer value) {
            addCriterion("EXIST_FLAG >", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("EXIST_FLAG >=", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagLessThan(Integer value) {
            addCriterion("EXIST_FLAG <", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagLessThanOrEqualTo(Integer value) {
            addCriterion("EXIST_FLAG <=", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagIn(List<Integer> values) {
            addCriterion("EXIST_FLAG in", values, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagNotIn(List<Integer> values) {
            addCriterion("EXIST_FLAG not in", values, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagBetween(Integer value1, Integer value2) {
            addCriterion("EXIST_FLAG between", value1, value2, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("EXIST_FLAG not between", value1, value2, "existFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table c_lesson
     *
     * @mbggenerated do_not_delete_during_merge Tue May 26 14:51:53 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table c_lesson
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}