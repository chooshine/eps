package com.eps.mybatis.auto.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TestRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Integer limitSize;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public TestRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public void setLimitSize(Integer limitSize) {
        this.limitSize=limitSize;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public Integer getLimitSize() {
        return limitSize;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTestRecIdIsNull() {
            addCriterion("TEST_REC_ID is null");
            return (Criteria) this;
        }

        public Criteria andTestRecIdIsNotNull() {
            addCriterion("TEST_REC_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTestRecIdEqualTo(Integer value) {
            addCriterion("TEST_REC_ID =", value, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdNotEqualTo(Integer value) {
            addCriterion("TEST_REC_ID <>", value, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdGreaterThan(Integer value) {
            addCriterion("TEST_REC_ID >", value, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEST_REC_ID >=", value, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdLessThan(Integer value) {
            addCriterion("TEST_REC_ID <", value, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdLessThanOrEqualTo(Integer value) {
            addCriterion("TEST_REC_ID <=", value, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdIn(List<Integer> values) {
            addCriterion("TEST_REC_ID in", values, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdNotIn(List<Integer> values) {
            addCriterion("TEST_REC_ID not in", values, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdBetween(Integer value1, Integer value2) {
            addCriterion("TEST_REC_ID between", value1, value2, "testRecId");
            return (Criteria) this;
        }

        public Criteria andTestRecIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TEST_REC_ID not between", value1, value2, "testRecId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("USER_ID =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("USER_ID <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("USER_ID >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("USER_ID >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("USER_ID <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("USER_ID <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("USER_ID in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("USER_ID not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("USER_ID not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNull() {
            addCriterion("STUDENT_ID is null");
            return (Criteria) this;
        }

        public Criteria andStudentIdIsNotNull() {
            addCriterion("STUDENT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andStudentIdEqualTo(Integer value) {
            addCriterion("STUDENT_ID =", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotEqualTo(Integer value) {
            addCriterion("STUDENT_ID <>", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThan(Integer value) {
            addCriterion("STUDENT_ID >", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("STUDENT_ID >=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThan(Integer value) {
            addCriterion("STUDENT_ID <", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdLessThanOrEqualTo(Integer value) {
            addCriterion("STUDENT_ID <=", value, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdIn(List<Integer> values) {
            addCriterion("STUDENT_ID in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotIn(List<Integer> values) {
            addCriterion("STUDENT_ID not in", values, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdBetween(Integer value1, Integer value2) {
            addCriterion("STUDENT_ID between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andStudentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("STUDENT_ID not between", value1, value2, "studentId");
            return (Criteria) this;
        }

        public Criteria andClassIdIsNull() {
            addCriterion("CLASS_ID is null");
            return (Criteria) this;
        }

        public Criteria andClassIdIsNotNull() {
            addCriterion("CLASS_ID is not null");
            return (Criteria) this;
        }

        public Criteria andClassIdEqualTo(Integer value) {
            addCriterion("CLASS_ID =", value, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdNotEqualTo(Integer value) {
            addCriterion("CLASS_ID <>", value, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdGreaterThan(Integer value) {
            addCriterion("CLASS_ID >", value, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("CLASS_ID >=", value, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdLessThan(Integer value) {
            addCriterion("CLASS_ID <", value, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdLessThanOrEqualTo(Integer value) {
            addCriterion("CLASS_ID <=", value, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdIn(List<Integer> values) {
            addCriterion("CLASS_ID in", values, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdNotIn(List<Integer> values) {
            addCriterion("CLASS_ID not in", values, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdBetween(Integer value1, Integer value2) {
            addCriterion("CLASS_ID between", value1, value2, "classId");
            return (Criteria) this;
        }

        public Criteria andClassIdNotBetween(Integer value1, Integer value2) {
            addCriterion("CLASS_ID not between", value1, value2, "classId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIsNull() {
            addCriterion("SUBJECT_ID is null");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIsNotNull() {
            addCriterion("SUBJECT_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSubjectIdEqualTo(Integer value) {
            addCriterion("SUBJECT_ID =", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotEqualTo(Integer value) {
            addCriterion("SUBJECT_ID <>", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdGreaterThan(Integer value) {
            addCriterion("SUBJECT_ID >", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("SUBJECT_ID >=", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdLessThan(Integer value) {
            addCriterion("SUBJECT_ID <", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdLessThanOrEqualTo(Integer value) {
            addCriterion("SUBJECT_ID <=", value, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdIn(List<Integer> values) {
            addCriterion("SUBJECT_ID in", values, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotIn(List<Integer> values) {
            addCriterion("SUBJECT_ID not in", values, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdBetween(Integer value1, Integer value2) {
            addCriterion("SUBJECT_ID between", value1, value2, "subjectId");
            return (Criteria) this;
        }

        public Criteria andSubjectIdNotBetween(Integer value1, Integer value2) {
            addCriterion("SUBJECT_ID not between", value1, value2, "subjectId");
            return (Criteria) this;
        }

        public Criteria andExamIdIsNull() {
            addCriterion("EXAM_ID is null");
            return (Criteria) this;
        }

        public Criteria andExamIdIsNotNull() {
            addCriterion("EXAM_ID is not null");
            return (Criteria) this;
        }

        public Criteria andExamIdEqualTo(Integer value) {
            addCriterion("EXAM_ID =", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdNotEqualTo(Integer value) {
            addCriterion("EXAM_ID <>", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdGreaterThan(Integer value) {
            addCriterion("EXAM_ID >", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("EXAM_ID >=", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdLessThan(Integer value) {
            addCriterion("EXAM_ID <", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdLessThanOrEqualTo(Integer value) {
            addCriterion("EXAM_ID <=", value, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdIn(List<Integer> values) {
            addCriterion("EXAM_ID in", values, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdNotIn(List<Integer> values) {
            addCriterion("EXAM_ID not in", values, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_ID between", value1, value2, "examId");
            return (Criteria) this;
        }

        public Criteria andExamIdNotBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_ID not between", value1, value2, "examId");
            return (Criteria) this;
        }

        public Criteria andTestIdIsNull() {
            addCriterion("TEST_ID is null");
            return (Criteria) this;
        }

        public Criteria andTestIdIsNotNull() {
            addCriterion("TEST_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTestIdEqualTo(Integer value) {
            addCriterion("TEST_ID =", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotEqualTo(Integer value) {
            addCriterion("TEST_ID <>", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdGreaterThan(Integer value) {
            addCriterion("TEST_ID >", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("TEST_ID >=", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdLessThan(Integer value) {
            addCriterion("TEST_ID <", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdLessThanOrEqualTo(Integer value) {
            addCriterion("TEST_ID <=", value, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdIn(List<Integer> values) {
            addCriterion("TEST_ID in", values, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotIn(List<Integer> values) {
            addCriterion("TEST_ID not in", values, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdBetween(Integer value1, Integer value2) {
            addCriterion("TEST_ID between", value1, value2, "testId");
            return (Criteria) this;
        }

        public Criteria andTestIdNotBetween(Integer value1, Integer value2) {
            addCriterion("TEST_ID not between", value1, value2, "testId");
            return (Criteria) this;
        }

        public Criteria andExamTimeIsNull() {
            addCriterion("EXAM_TIME is null");
            return (Criteria) this;
        }

        public Criteria andExamTimeIsNotNull() {
            addCriterion("EXAM_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andExamTimeEqualTo(Date value) {
            addCriterion("EXAM_TIME =", value, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeNotEqualTo(Date value) {
            addCriterion("EXAM_TIME <>", value, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeGreaterThan(Date value) {
            addCriterion("EXAM_TIME >", value, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("EXAM_TIME >=", value, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeLessThan(Date value) {
            addCriterion("EXAM_TIME <", value, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeLessThanOrEqualTo(Date value) {
            addCriterion("EXAM_TIME <=", value, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeIn(List<Date> values) {
            addCriterion("EXAM_TIME in", values, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeNotIn(List<Date> values) {
            addCriterion("EXAM_TIME not in", values, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeBetween(Date value1, Date value2) {
            addCriterion("EXAM_TIME between", value1, value2, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamTimeNotBetween(Date value1, Date value2) {
            addCriterion("EXAM_TIME not between", value1, value2, "examTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeIsNull() {
            addCriterion("EXAM_USE_TIME is null");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeIsNotNull() {
            addCriterion("EXAM_USE_TIME is not null");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeEqualTo(String value) {
            addCriterion("EXAM_USE_TIME =", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeNotEqualTo(String value) {
            addCriterion("EXAM_USE_TIME <>", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeGreaterThan(String value) {
            addCriterion("EXAM_USE_TIME >", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeGreaterThanOrEqualTo(String value) {
            addCriterion("EXAM_USE_TIME >=", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeLessThan(String value) {
            addCriterion("EXAM_USE_TIME <", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeLessThanOrEqualTo(String value) {
            addCriterion("EXAM_USE_TIME <=", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeLike(String value) {
            addCriterion("EXAM_USE_TIME like", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeNotLike(String value) {
            addCriterion("EXAM_USE_TIME not like", value, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeIn(List<String> values) {
            addCriterion("EXAM_USE_TIME in", values, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeNotIn(List<String> values) {
            addCriterion("EXAM_USE_TIME not in", values, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeBetween(String value1, String value2) {
            addCriterion("EXAM_USE_TIME between", value1, value2, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andExamUseTimeNotBetween(String value1, String value2) {
            addCriterion("EXAM_USE_TIME not between", value1, value2, "examUseTime");
            return (Criteria) this;
        }

        public Criteria andFinishedNumIsNull() {
            addCriterion("FINISHED_NUM is null");
            return (Criteria) this;
        }

        public Criteria andFinishedNumIsNotNull() {
            addCriterion("FINISHED_NUM is not null");
            return (Criteria) this;
        }

        public Criteria andFinishedNumEqualTo(Integer value) {
            addCriterion("FINISHED_NUM =", value, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumNotEqualTo(Integer value) {
            addCriterion("FINISHED_NUM <>", value, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumGreaterThan(Integer value) {
            addCriterion("FINISHED_NUM >", value, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("FINISHED_NUM >=", value, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumLessThan(Integer value) {
            addCriterion("FINISHED_NUM <", value, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumLessThanOrEqualTo(Integer value) {
            addCriterion("FINISHED_NUM <=", value, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumIn(List<Integer> values) {
            addCriterion("FINISHED_NUM in", values, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumNotIn(List<Integer> values) {
            addCriterion("FINISHED_NUM not in", values, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumBetween(Integer value1, Integer value2) {
            addCriterion("FINISHED_NUM between", value1, value2, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andFinishedNumNotBetween(Integer value1, Integer value2) {
            addCriterion("FINISHED_NUM not between", value1, value2, "finishedNum");
            return (Criteria) this;
        }

        public Criteria andScoreIsNull() {
            addCriterion("SCORE is null");
            return (Criteria) this;
        }

        public Criteria andScoreIsNotNull() {
            addCriterion("SCORE is not null");
            return (Criteria) this;
        }

        public Criteria andScoreEqualTo(Double value) {
            addCriterion("SCORE =", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotEqualTo(Double value) {
            addCriterion("SCORE <>", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThan(Double value) {
            addCriterion("SCORE >", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreGreaterThanOrEqualTo(Double value) {
            addCriterion("SCORE >=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThan(Double value) {
            addCriterion("SCORE <", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreLessThanOrEqualTo(Double value) {
            addCriterion("SCORE <=", value, "score");
            return (Criteria) this;
        }

        public Criteria andScoreIn(List<Double> values) {
            addCriterion("SCORE in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotIn(List<Double> values) {
            addCriterion("SCORE not in", values, "score");
            return (Criteria) this;
        }

        public Criteria andScoreBetween(Double value1, Double value2) {
            addCriterion("SCORE between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andScoreNotBetween(Double value1, Double value2) {
            addCriterion("SCORE not between", value1, value2, "score");
            return (Criteria) this;
        }

        public Criteria andCommitFlagIsNull() {
            addCriterion("COMMIT_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andCommitFlagIsNotNull() {
            addCriterion("COMMIT_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andCommitFlagEqualTo(Integer value) {
            addCriterion("COMMIT_FLAG =", value, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagNotEqualTo(Integer value) {
            addCriterion("COMMIT_FLAG <>", value, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagGreaterThan(Integer value) {
            addCriterion("COMMIT_FLAG >", value, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("COMMIT_FLAG >=", value, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagLessThan(Integer value) {
            addCriterion("COMMIT_FLAG <", value, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagLessThanOrEqualTo(Integer value) {
            addCriterion("COMMIT_FLAG <=", value, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagIn(List<Integer> values) {
            addCriterion("COMMIT_FLAG in", values, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagNotIn(List<Integer> values) {
            addCriterion("COMMIT_FLAG not in", values, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagBetween(Integer value1, Integer value2) {
            addCriterion("COMMIT_FLAG between", value1, value2, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andCommitFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("COMMIT_FLAG not between", value1, value2, "commitFlag");
            return (Criteria) this;
        }

        public Criteria andExamStatusIsNull() {
            addCriterion("EXAM_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andExamStatusIsNotNull() {
            addCriterion("EXAM_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andExamStatusEqualTo(Integer value) {
            addCriterion("EXAM_STATUS =", value, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusNotEqualTo(Integer value) {
            addCriterion("EXAM_STATUS <>", value, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusGreaterThan(Integer value) {
            addCriterion("EXAM_STATUS >", value, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("EXAM_STATUS >=", value, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusLessThan(Integer value) {
            addCriterion("EXAM_STATUS <", value, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusLessThanOrEqualTo(Integer value) {
            addCriterion("EXAM_STATUS <=", value, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusIn(List<Integer> values) {
            addCriterion("EXAM_STATUS in", values, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusNotIn(List<Integer> values) {
            addCriterion("EXAM_STATUS not in", values, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_STATUS between", value1, value2, "examStatus");
            return (Criteria) this;
        }

        public Criteria andExamStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("EXAM_STATUS not between", value1, value2, "examStatus");
            return (Criteria) this;
        }

        public Criteria andMarkFlagIsNull() {
            addCriterion("MARK_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andMarkFlagIsNotNull() {
            addCriterion("MARK_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andMarkFlagEqualTo(Integer value) {
            addCriterion("MARK_FLAG =", value, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagNotEqualTo(Integer value) {
            addCriterion("MARK_FLAG <>", value, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagGreaterThan(Integer value) {
            addCriterion("MARK_FLAG >", value, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("MARK_FLAG >=", value, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagLessThan(Integer value) {
            addCriterion("MARK_FLAG <", value, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagLessThanOrEqualTo(Integer value) {
            addCriterion("MARK_FLAG <=", value, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagIn(List<Integer> values) {
            addCriterion("MARK_FLAG in", values, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagNotIn(List<Integer> values) {
            addCriterion("MARK_FLAG not in", values, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagBetween(Integer value1, Integer value2) {
            addCriterion("MARK_FLAG between", value1, value2, "markFlag");
            return (Criteria) this;
        }

        public Criteria andMarkFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("MARK_FLAG not between", value1, value2, "markFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagIsNull() {
            addCriterion("EXIST_FLAG is null");
            return (Criteria) this;
        }

        public Criteria andExistFlagIsNotNull() {
            addCriterion("EXIST_FLAG is not null");
            return (Criteria) this;
        }

        public Criteria andExistFlagEqualTo(Integer value) {
            addCriterion("EXIST_FLAG =", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagNotEqualTo(Integer value) {
            addCriterion("EXIST_FLAG <>", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagGreaterThan(Integer value) {
            addCriterion("EXIST_FLAG >", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("EXIST_FLAG >=", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagLessThan(Integer value) {
            addCriterion("EXIST_FLAG <", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagLessThanOrEqualTo(Integer value) {
            addCriterion("EXIST_FLAG <=", value, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagIn(List<Integer> values) {
            addCriterion("EXIST_FLAG in", values, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagNotIn(List<Integer> values) {
            addCriterion("EXIST_FLAG not in", values, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagBetween(Integer value1, Integer value2) {
            addCriterion("EXIST_FLAG between", value1, value2, "existFlag");
            return (Criteria) this;
        }

        public Criteria andExistFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("EXIST_FLAG not between", value1, value2, "existFlag");
            return (Criteria) this;
        }

        public Criteria andCreatorIdIsNull() {
            addCriterion("CREATOR_ID is null");
            return (Criteria) this;
        }

        public Criteria andCreatorIdIsNotNull() {
            addCriterion("CREATOR_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCreatorIdEqualTo(Integer value) {
            addCriterion("CREATOR_ID =", value, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdNotEqualTo(Integer value) {
            addCriterion("CREATOR_ID <>", value, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdGreaterThan(Integer value) {
            addCriterion("CREATOR_ID >", value, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("CREATOR_ID >=", value, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdLessThan(Integer value) {
            addCriterion("CREATOR_ID <", value, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdLessThanOrEqualTo(Integer value) {
            addCriterion("CREATOR_ID <=", value, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdIn(List<Integer> values) {
            addCriterion("CREATOR_ID in", values, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdNotIn(List<Integer> values) {
            addCriterion("CREATOR_ID not in", values, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdBetween(Integer value1, Integer value2) {
            addCriterion("CREATOR_ID between", value1, value2, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCreatorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("CREATOR_ID not between", value1, value2, "creatorId");
            return (Criteria) this;
        }

        public Criteria andCommentRecIsNull() {
            addCriterion("COMMENT_REC is null");
            return (Criteria) this;
        }

        public Criteria andCommentRecIsNotNull() {
            addCriterion("COMMENT_REC is not null");
            return (Criteria) this;
        }

        public Criteria andCommentRecEqualTo(String value) {
            addCriterion("COMMENT_REC =", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecNotEqualTo(String value) {
            addCriterion("COMMENT_REC <>", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecGreaterThan(String value) {
            addCriterion("COMMENT_REC >", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecGreaterThanOrEqualTo(String value) {
            addCriterion("COMMENT_REC >=", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecLessThan(String value) {
            addCriterion("COMMENT_REC <", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecLessThanOrEqualTo(String value) {
            addCriterion("COMMENT_REC <=", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecLike(String value) {
            addCriterion("COMMENT_REC like", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecNotLike(String value) {
            addCriterion("COMMENT_REC not like", value, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecIn(List<String> values) {
            addCriterion("COMMENT_REC in", values, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecNotIn(List<String> values) {
            addCriterion("COMMENT_REC not in", values, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecBetween(String value1, String value2) {
            addCriterion("COMMENT_REC between", value1, value2, "commentRec");
            return (Criteria) this;
        }

        public Criteria andCommentRecNotBetween(String value1, String value2) {
            addCriterion("COMMENT_REC not between", value1, value2, "commentRec");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table e_test_record
     *
     * @mbggenerated do_not_delete_during_merge Tue May 26 14:51:53 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table e_test_record
     *
     * @mbggenerated Tue May 26 14:51:53 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}