<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx 
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
    <context:component-scan base-package="com.eps.service" />
    <context:component-scan base-package="com.eps.android.service" />

	<!-- 国际化资源 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource" p:cacheSeconds="15"> 
		<property name="basenames">
			<list>
				<value>classpath:messageResource</value>
			</list>
		</property>	
	</bean>
	
	<bean id="messageService" class="com.eps.service.MessageService"/>
	<bean id="mailSend" class="org.springframework.mail.javamail.JavaMailSenderImpl" 
	      p:host="${mail.server.smtp.host}"
	      p:username="${mail.server.userName}"
	      p:password="${mail.server.password}">
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
			</props>
		</property>
	</bean>
	<bean id="mailSendHelper" class="com.eps.utils.MailSendHelper"
		  p:mailSend-ref="mailSend"
		  p:from="${mail.server.address}"
		  p:personal="${mail.server.personal}">
	</bean>
	<!-- 配置定时任务 -->
	<bean id="complementArticle" class="com.eps.job.ComplementArticle">
	</bean>
	<bean id="weatherCity" class="com.eps.job.WeatherCity">
	</bean>
	<!-- 新闻抓取 -->
	<bean id="crawlerJob" class="com.eps.job.CrawlerJob"></bean>
	<bean id="crawlerJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="crawlerJob"/>
        <property name="targetMethod" value="crawlerNews"/>
        <property name="concurrent" value="false"/>  
	</bean>
	<bean id="crawlerJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="crawlerJobDetail"/>
        <property name="cronExpression" value="0 0,15,30,45 * * * ?" />
	</bean>
	<!-- 配置需定时执行的bean及函数 -->
    <bean id="fileJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="complementArticle"/>
        <property name="targetMethod" value="excute"/>
        <property name="concurrent" value="false"/>  
    </bean>
    <bean id="weatherCityJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="weatherCity"/>
        <property name="targetMethod" value="getWeatherCity"/>
        <property name="concurrent" value="false"/>
    </bean>
    <!-- 配置执行方式 -->
    <bean id="fileJobTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="fileJobDetail"/>
        <property name="cronExpression" value="0 0 3 * * ?" />
    </bean>
    <bean id="weatherCityTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    	<property name="jobDetail" ref="weatherCityJobDetail"/>
        <property name="cronExpression" value="0 0 4 * * ?" />
    </bean>
    <!-- 定时获取微信Access_token -->
    <bean id="getAccessToken" class="com.eps.service.weixin.Contains">
    </bean>
    <bean id="getAccessTokenDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="getAccessToken"/>
        <property name="targetMethod" value="getAccessToken"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="getAccessTokenTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    	<property name="jobDetail" ref="getAccessTokenDetail"/>
    	<!-- 延迟5000 毫秒执行 -->
    	<property name="startDelay" value="5000"/>
    	<!-- 执行次数  -1不限次数 -->
        <property name="repeatCount" value="-1" />
        <!-- 执行间隔  毫秒 -->
        <property name="repeatInterval" value="7000000" />
    </bean>
    <!-- 抓取题目启动程序 -->
    <bean id="quesCrawler" class="com.eps.job.QuesCrawlerJob" />
    <bean id="quesCrawlerDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
    	<property name="targetObject" ref="quesCrawler"/>
        <property name="targetMethod" value="process"/>
        <property name="concurrent" value="false"/>
    </bean>
    <bean id="quesCrawlerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    	<property name="jobDetail" ref="quesCrawlerDetail"/>
    	<property name="startDelay" value="5000"/>
		<property name="repeatCount" value="0" />
	</bean>
	<!-- 下载题目内容中的图片 -->
	<bean id="downloadImageDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="quesCrawler"/>
        <property name="targetMethod" value="downloadImage"/>
        <property name="concurrent" value="false"/>
	</bean>
	<bean id="downloadImageTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    	<property name="jobDetail" ref="downloadImageDetail"/>
    	<property name="startDelay" value="5000"/>
		<property name="repeatCount" value="0" />
	</bean>
	<!-- 下载题目答案及解析图片 -->
	<bean id="downloadAnswerImageDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="quesCrawler"/>
        <property name="targetMethod" value="downloadAnswerAndParse"/>
        <property name="concurrent" value="false"/>
	</bean>
	<bean id="downloadAnswerImageTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
    	<property name="jobDetail" ref="downloadAnswerImageDetail"/>
    	<property name="startDelay" value="10000"/>
		<property name="repeatCount" value="0" />
	</bean>
	<!-- 加入执行列表  -->
	<bean id="jobList" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
              <!--   <ref bean="fileJobTaskTrigger" /> -->
              <!--   <ref bean="weatherCityTrigger" /> -->
              <!--   <ref bean="crawlerJobTrigger" /> -->
              <!-- <ref bean="getAccessTokenTrigger"/> -->
              <!-- <ref bean="quesCrawlerTrigger"/> -->
              <!-- <ref bean="downloadImageTrigger"/> -->
              <!-- <ref bean="downloadAnswerImageTrigger"/> -->
			</list>
		</property>
	</bean>
    <!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression=" execution(* com.eps.service..*Service(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
</beans>